//*****************************超时+限流+熔断+降级+Consul+Polly********************************
{
  "Routes": [
    {
      //转发到下游服务地址--url变量
      "DownstreamPathTemplate": "/api/{url}", // 服务地址--url变量
      //下游http协议
      "DownstreamScheme": "http",
      //负载方式，
      "LoadBalancerOptions": {
        "Type": "RoundRobin" // RoundRobin 轮询 LeastConnection-最少连接数的服务器   NoLoadBalance不负载均衡
      },
      //上游地址
      "UpstreamPathTemplate": "/gateway/{url}", // 网关地址--url变量 // 冲突的还可以加权重Priority
      "UpstreamHttpMethod": [ "Get", "Post", "DELETE", "PUT" ],
      // 使用服务发现
      "UseServiceDiscovery": true,
      "ServiceName": "MicServiceDemo", //consul服务名称
      // 限流设置， polly
      "RateLimitOptions": {
        "ClientWhitelist": [ "admin" ], //白名单 请求头ClientId 区分大小写
        "EnableRateLimiting": true,
        "Period": "5m", //1s, 5m, 1h, 1d
        "PeriodTimespan": 30, //多少秒之后客户端可以重试
        "Limit": 5 //统计时间段内允许的最大请求数量
      },
      // 熔断设置,熔断器使用Polly
      //"QoSOptions": {
      //  "ExceptionsAllowedBeforeBreaking": 3, //允许多少个异常请求
      //  "DurationOfBreak": 10000, // 熔断的时间，单位为ms
      //  "TimeoutValue": 2000 //单位ms 如果下游请求的处理时间超过多少则自如将请求设置为超时 默认90秒
      //}
      // 鉴权
      //"AuthenticationOptions": {
      //  "AuthenticationProviderKey": "UserGatewayKey", // 指定一个key,startUp中使用
      //  "AllowedScopes": [ "gatewayScope" ]
      //},

      // 文件缓存
      "FileCacheOptions": {
        "TtlSeconds": 15,
        "Region": "UserCache" //可以调用Api清理
      }
    }
  ],
  "GlobalConfiguration": {
    "ServiceDiscoveryProvider": {
      "Host": "localhost",  // Consul 集群地址
      "Port": 8080, // Consul Nginx负载均衡 端口
      // 由Consul提供服务发现
      "Type": "Consul"
    },

    // 限流选项
    "RateLimitOptions": {
      "QuotaExceededMessage": "请求太频繁，触发限流 ", // 当请求过载被截断时返回的消息
      "HttpStatusCode": 666 // 当请求过载被截断时返回的http status
      //"ClientIdHeader": "client_id" // 用来识别客户端的请求头，默认是 ClientId
    }
  }
}
