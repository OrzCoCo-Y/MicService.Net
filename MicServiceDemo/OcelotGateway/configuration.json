////*****************************单地址********************************
//{
//  //ReRoutes--16.0跟
//  "Routes": [
//    {
//      "DownstreamPathTemplate": "/api/{url}", //服务地址--url变量
//      "DownstreamScheme": "http",
//      "DownstreamHostAndPorts": [
//        {
//          "Host": "localhost",
//          "Port": 5726 //服务端口
//        }
//      ],
//      "UpstreamPathTemplate": "/T5726/{url}", //网关地址--url变量
//      "UpstreamHttpMethod": [ "Get", "Post" ]
//    }
//  ]
//}

////*****************************单地址全匹配********************************
//{
//  "Routes": [
//    {
//      "DownstreamPathTemplate": "/{url}", //服务地址--url变量
//      "DownstreamScheme": "http",
//      "DownstreamHostAndPorts": [
//        {
//          "Host": "localhost",
//          "Port": 5726 //服务端口
//        }
//      ],
//      "UpstreamPathTemplate": "/{url}", //网关地址--url变量   //冲突的还可以加权重Priority
//      "UpstreamHttpMethod": [ "Get", "Post" ]
//    }
//  ]
//}

////*****************************多地址多实例********************************
//{
//  "Routes": [
//    {
//      "DownstreamPathTemplate": "/api/{url}", //服务地址--url变量
//      "DownstreamScheme": "http",
//      "DownstreamHostAndPorts": [
//        {
//          "Host": "localhost",
//          "Port": 5726 //服务端口
//        }
//      ],
//      "UpstreamPathTemplate": "/T5726/{url}", //网关地址--url变量
//      "UpstreamHttpMethod": [ "Get", "Post" ]
//    },
//    {
//      "DownstreamPathTemplate": "/api/{url}", //服务地址--url变量
//      "DownstreamScheme": "http",
//      "DownstreamHostAndPorts": [
//        {
//          "Host": "localhost",
//          "Port": 5727 //服务端口
//        }
//      ],
//      "UpstreamPathTemplate": "/T5727/{url}", //网关地址--url变量
//      "UpstreamHttpMethod": [ "Get", "Post" ]
//    },
//    {
//      "DownstreamPathTemplate": "/api/{url}", //服务地址--url变量
//      "DownstreamScheme": "http",
//      "DownstreamHostAndPorts": [
//        {
//          "Host": "localhost",
//          "Port": 5728 //服务端口
//        }
//      ],
//      "UpstreamPathTemplate": "/T5728/{url}", //网关地址--url变量
//      "UpstreamHttpMethod": [ "Get", "Post" ]
//    }
//  ]
//}

//////MVC的路由规则是近水楼台先得月--
////*****************************路由冲突+带权匹配********************************
//{
//  "Routes": [
//    {
//      "DownstreamPathTemplate": "/{url}", //服务地址--url变量
//      "DownstreamScheme": "http",
//      "DownstreamHostAndPorts": [
//        {
//          "Host": "localhost",
//          "Port": 5726 //服务端口
//        }
//      ],
//      "UpstreamPathTemplate": "/{url}", //网关地址--url变量   //冲突的还可以加权重Priority
//      "UpstreamHttpMethod": [ "Get", "Post" ],
//      "Priority": 0 //默认是0 加个1
//    },
//    {
//      "DownstreamPathTemplate": "/api/users/get?id={id}", //服务地址--url变量
//      "DownstreamScheme": "http",
//      "DownstreamHostAndPorts": [
//        {
//          "Host": "localhost",
//          "Port": 5727 //服务端口
//        }
//      ],
//      "UpstreamPathTemplate": "/api/users/get/{id}", //网关地址--url变量   //冲突的还可以加权重Priority
//      "UpstreamHttpMethod": [ "Get", "Post" ],
//      "Priority": 1 //默认是0 加个1
//    },
//    {
//      "DownstreamPathTemplate": "/api/users/{url}?id={id}", //服务地址--url变量
//      "DownstreamScheme": "http",
//      "DownstreamHostAndPorts": [
//        {
//          "Host": "localhost",
//          "Port": 5728 //服务端口
//        }
//      ],
//      "UpstreamPathTemplate": "/api/users/{url}/{id}", //网关地址--url变量   //冲突的还可以加权重Priority
//      "UpstreamHttpMethod": [ "Get", "Post" ],
//      "Priority": 2 //默认是0 加个1
//    }
//  ]
//}

////*****************************单地址多实例负载均衡********************************
//{
//  "Routes": [
//    {
//      "DownstreamPathTemplate": "/api/{url}", //服务地址--url变量
//      "DownstreamScheme": "http",
//      "DownstreamHostAndPorts": [
//        {
//          "Host": "localhost",
//          "Port": 5726
//        } //Ocelot负载均衡
//        ,
//        {
//          "Host": "localhost",
//          "Port": 5727
//        },
//        {
//          "Host": "localhost",
//          "Port": 5728
//        }
//      ],
//      "UpstreamPathTemplate": "/T/{url}", //网关地址--url变量   //冲突的还可以加权重Priority
//      "UpstreamHttpMethod": [ "Get", "Post" ],
//      "LoadBalancerOptions": {
//        "Type": "RoundRobin" //轮询 //"LeastConnection" //最少连接数的服务器  "NoLoadBalance" //不负载均衡  //"CookieStickySessions" //会话粘滞  //
//      }
//      //"LoadBalancerOptions": {
//      //  "Type": "CookieStickySessions",
//      //  "Key": "ASP.NET_SessionId",
//      //  "Expiry": 1800000
//      //}
//    }
//  ]
//}

////*****************************单地址多实例负载均衡+Consul********************************
//{
//  "Routes": [
//    {
//      "DownstreamPathTemplate": "/api/{url}", //服务地址--url变量
//      "DownstreamScheme": "http",
//      "UpstreamPathTemplate": "/T/{url}", //网关地址--url变量
//      "UpstreamHttpMethod": [ "Get", "Post" ],
//      "UseServiceDiscovery": true,
//      "ServiceName": "MicServiceDemo", //consul服务名称
//      "LoadBalancerOptions": {
//        "Type": "RoundRobin" //轮询      LeastConnection-最少连接数的服务器   NoLoadBalance不负载均衡
//      }
//    }
//  ],
//  "GlobalConfiguration": {
//    "BaseUrl": "http://127.0.0.1:6299", //网关对外地址
//    "ServiceDiscoveryProvider": { // Consul的地址
//      "Host": "localhost",  
//      "Port": 8500,
//      "Type": "Consul" //由Consul提供服务发现, 每次请求去consul
//    }
//    //,"ServiceDiscoveryProvider": {
//    //  "Host": "localhost",
//    //  "Port": 8500,
//    //  "Type": "PollConsul", // 由Consul提供服务发现,
//    //  "PollingInterval": 1000 // 轮询consul,频率毫秒--down掉是不知道的
//    //  //"Token": "footoken"// 需要ACL的话
//    //}
//  }
//}

//*****************************Consul+缓存Cache********************************
//{
//  "Routes": [
//    {
//      "DownstreamPathTemplate": "/api/{url}", //服务地址--url变量
//      "DownstreamScheme": "http",
//      "UpstreamPathTemplate": "/T/{url}", //网关地址--url变量
//      "UpstreamHttpMethod": [ "Get", "Post" ],
//      "UseServiceDiscovery": true,
//      "ServiceName": "MicServiceDemo", //consul服务名称
//      "LoadBalancerOptions": {
//        "Type": "RoundRobin" //轮询      LeastConnection-最少连接数的服务器   NoLoadBalance不负载均衡
//      },
//      "FileCacheOptions": {
//        "TtlSeconds": 10, //Second
//        "Region": "UserCache" //可以调用Api缓存清理
//      }
//    }
//  ],
//  "GlobalConfiguration": {
//    "BaseUrl": "http://127.0.0.1:6299", //网关对外地址
//    "ServiceDiscoveryProvider": {
//      "Host": "127.0.0.1", // 部署至云服务器中时，需换成对应的公网地址，因为网关单独作为容器，通讯需要网络才可以通
//      "Port": 8500,
//      "Type": "Consul" //由Consul提供服务发现, 每次请求去consul
//    }
//    //"ServiceDiscoveryProvider": {
//    //  "Host": "localhost",
//    //  "Port": 8500,
//    //  "Type": "PollConsul", //由Consul提供服务发现,
//    //  "PollingInterval": 1000 //轮询consul,频率毫秒--down掉是不知道的
//    //  //"Token": "footoken"//需要ACL的话
//    //}
//  }
//}

////*****************************超时+限流+熔断+降级+Consul+Polly********************************
{
  "Routes": [
    {
      //转发到下游服务地址--url变量
      "DownstreamPathTemplate": "/api/{url}", // 服务地址--url变量
      //下游http协议
      "DownstreamScheme": "http",
      //负载方式，
      "LoadBalancerOptions": {
        "Type": "RoundRobin" // RoundRobin 轮询 LeastConnection-最少连接数的服务器   NoLoadBalance不负载均衡
      },
      //上游地址
      "UpstreamPathTemplate": "/gateway/{url}", // 网关地址--url变量 // 冲突的还可以加权重Priority
      "UpstreamHttpMethod": [ "Get", "Post", "DELETE", "PUT" ],
      // 使用服务发现
      "UseServiceDiscovery": true,
      "ServiceName": "MicServiceDemo", //consul服务名称
      // 限流设置， polly
      "RateLimitOptions": {
        "ClientWhitelist": [ "eleven", "seven" ], //白名单 ClientId 区分大小写
        "EnableRateLimiting": true,
        "Period": "5m", //1s, 5m, 1h, 1d
        "PeriodTimespan": 30, //多少秒之后客户端可以重试
        "Limit": 5 //统计时间段内允许的最大请求数量
      },
      // 熔断设置,熔断器使用Polly
      //"QoSOptions": {
      //  "ExceptionsAllowedBeforeBreaking": 3, //允许多少个异常请求
      //  "DurationOfBreak": 10000, // 熔断的时间，单位为ms
      //  "TimeoutValue": 2000 //单位ms 如果下游请求的处理时间超过多少则自如将请求设置为超时 默认90秒
      //}
      // 鉴权
      //"AuthenticationOptions": {
      //  "AuthenticationProviderKey": "UserGatewayKey", // 指定一个key,startUp中使用
      //  "AllowedScopes": [ "gatewayScope" ]
      //},

      // 文件缓存
      "FileCacheOptions": {
        "TtlSeconds": 15,
        "Region": "UserCache" //可以调用Api清理
      }
    }
  ],
  "GlobalConfiguration": {
    // 网关对外地址
    // "BaseUrl": "http://127.0.0.1:6299",
    "ServiceDiscoveryProvider": {
      "Host": "localhost",
      "Port": 8080,
      // 由Consul提供服务发现
      "Type": "Consul"
    },

    // 限流选项
    "RateLimitOptions": {
      "QuotaExceededMessage": "Too many requests, maybe later? 11", // 当请求过载被截断时返回的消息
      "HttpStatusCode": 666 // 当请求过载被截断时返回的http status
      //"ClientIdHeader": "client_id" // 用来识别客户端的请求头，默认是 ClientId
    }
  }
}
